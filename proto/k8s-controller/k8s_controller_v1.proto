// ライセンスはいつか書いておく

syntax = "proto3";

package gantrycd.k8s_controller.v1;

import "google/protobuf/empty.proto";

option go_package = "github.com/gantrycd/backend/api/proto/pb/k8s-controller/v1";

service K8sCustomController {
  // Namespace Control
  rpc CreateNamespace(CreateNamespaceRequest) returns(CreateNamespaceReply);
  rpc ListNamespaces(google.protobuf.Empty) returns(ListNamespacesReply);
  rpc DeleteNamespace(DeleteNamespaceRequest) returns(google.protobuf.Empty);

  // Deployment Control
  rpc ApplyDeployment(CreateDeploymentRequest) returns(CreateDeploymentReply);
  rpc DeleteDeployment(DeleteDeploymentRequest) returns(google.protobuf.Empty);


  rpc ListOrgsAnsRepos(google.protobuf.Empty) returns(ListOrgsAnsReposReply);
}

message CreateNamespaceRequest {
  string name = 1;
}

message CreateNamespaceReply {
  string name = 1;
}

message ListNamespacesReply {
  repeated string names = 1;
}

message DeleteNamespaceRequest {
  string name = 1;
}

message CreateDeploymentRequest {
  string namespace = 1;
  string repository = 2;
  string pr_number = 3;
  string image = 4;
  string pod_name = 5;
  string replicas = 6;
  string container_port = 7;
  string created_by = 8;
}

message CreateDeploymentReply {
  string namespace = 1;
  string name = 2;
  string version = 3;
}

message DeleteDeploymentRequest {
  string namespace = 1;
  string repository = 2;
  string pr_number = 3;
}

message OrgsAnsRepos {
  string orgs = 1;
  repeated string repos = 2;
}

message ListOrgsAnsReposReply {
  repeated OrgsAnsRepos orgs_ans_repos = 1;
}